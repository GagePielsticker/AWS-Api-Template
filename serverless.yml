service: api-service

###################
# General Configuration
###################

plugins:
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-associate-waf

provider:

  ### General Deployment Settings
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  stackTags:
    project: ${self:service}
  tags:
    project: ${self:service}

  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-deployment
  
  ### Lambda Settings
  runtime: nodejs18.x #node version
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 20 # optional, in seconds, default is 6
  architecture: arm64 #architecture to run the lambda (graviton2)
  logRetentionInDays: 7 #time in days to keep lambda logs in cloudwatch
  tracing: # X-Ray tracing on lambda & apigateway
    lambda: true
    apiGateway: true

  ### API Gateway creation/Settings & usage plan
  endpointType: EDGE
  apiGateway:
    description: Api Gateway for ${self:service}-${self:provider.stage}
    apiKeys:
      - private_key: # Used to tie key to usage plan
          - ${self:service}-${self:provider.stage}-KEY
    usagePlan:
      - private_key: # Used to tie key to usage plan. Key will abide by the following
          quota:
            limit: 5000 #maximum 5000 request per month, refreshes on 2nd day
            offset: 2
            period: MONTH
          throttle:
            burstLimit: 200 #maximum number of concurrent requests that API gateway will serve at any given point
            rateLimit: 100 #request per second limit

# attach waf to api gateway
custom:
  associateWaf:
    name: ${self:service}-${self:provider.stage}-WAF
    version: V2 #(optional) Regional | V2

###################
# Lambda Functions to provision
###################
# Lambda Packaging Options
package:
  individually: true
  patterns:
    - '!**/*'
    - node_modules/**
    - src/utils/** #Global lambda utils
    - package.json

# Actual lambda functions
functions:
  hello:
    handler: src/lambdas/hello/handler.handler #fileName.exportName in code
    maximumRetryAttempts: 1 #Retry attempts by lambda on failure
    package: # Only package code relevant to this specific lambda
      patterns:
        - src/lambdas/hello/**
    events: #API Gateway integration etc
      - http:
          method: get
          path: hello
          cors:
            origin: '*'

  bye:
    handler: src/lambdas/bye/handler.handler
    maximumRetryAttempts: 1
    package: # Only package code relevant to this specific lambda
      patterns:
        - src/lambdas/bye/**
    events:
      - http:
          method: get
          path: bye
          cors:
            origin: '*'

###################
# Additional Resource Provisioning
###################
resources:
  Resources:
    # S3 Bucket for deployment
    deploymentBucket:
      Type: AWS::S3::Bucket
      Properties:
        Tags:
          project: ${self:service}
        BucketName: ${self:service}-${self:provider.stage}-deployment

    # WAF for our api gateway
    wafv2:
      Type: AWS::WAFv2::WebACL
      Properties:
        DefaultAction: Allow
        Name: ${self:service}-${self:provider.stage}-WAF
        VisibilityConfig:
          CloudWatchMetricsEnabled: false
          MetricName: ${self:service}-${self:provider.stage}-WAF
          SampledRequestsEnabled: false
        Tags:
          project: ${self:service}
        Rules: 
          - Action: Block
            Name: Core-Rule-Set
            Priority: 0
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesCommonRuleSet
          - Action: Block
            Name: Known-Bad-Input
            Priority: 1
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesKnownBadInputsRuleSet
          - Action: Block
            Name: Anonymous-IP
            Priority: 2
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesAnonymousIpList
          - Action: Block
            Name: IP-Reputation
            Priority: 3
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesAmazonIpReputationList